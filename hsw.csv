EventCode,UMask,EventName,Description,Counter,OverFlow,MSRIndex,MSRValue,PreciseEvent,Invert,AnyThread,EdgeDetect
"0x00","0x01","INST_RETIRED.ANY","This event counts the number of instructions retired from execution. For instructions that consist of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction. Counting continues during hardware interrupts, traps, and inside interrupt handlers. 
Notes: INST_RETIRED.ANY is counted by a designated fixed counter, leaving the four (eight when Hyperthreading is disabled) programmable counters available for other events. INST_RETIRED.ANY_P is counted by a programmable counter and it is an architectural performance event. 
Counting: Faulting executions of GETSEC/VM entry/VM Exit/MWait will not count as retired instructions...","Fixed counter 1","2000003","0","0","0","0","0","0"
"0x00","0x02","CPU_CLK_UNHALTED.THREAD","This event counts the number of core cycles while the core is not in a halt state. The core enters the halt state when it is running the HLT instruction. This event is a component in many key event ratios. The core frequency may change from time to time due to transitions associated with Enhanced Intel SpeedStep Technology or TM2. For this reason this event may have a changing ratio with regards to time. When the core frequency is constant, this event can approximate elapsed time while the core was not in the halt state. It is counted on a dedicated fixed counter, leaving the four (eight when Hyperthreading is disabled) programmable counters available for other events...","Fixed counter 2","2000003","0","0","0","0","0","0"
"0x00","0x03","CPU_CLK_UNHALTED.REF_TSC","This event counts the number of reference cycles when the core is not in a halt state. The core enters the halt state when it is running the HLT instruction or the MWAIT instruction. This event is not affected by core frequency changes (for example, P states, TM2 transitions) but has the same incrementing frequency as the time stamp counter. This event can approximate elapsed time while the core was not in a halt state. This event has a constant ratio with the CPU_CLK_UNHALTED.REF_XCLK event. It is counted on a dedicated fixed counter, leaving the four (eight when Hyperthreading is disabled) programmable counters available for other events. 
Note: On all current platforms this event stops counting during 'throttling (TM)' states duty off periods the processor is 'halted'.  This event is clocked by base clock (100 Mhz) on Sandy Bridge. The counter update is done at a lower clock rate then the core clock the overflow status bit for this counter may appear 'sticky'.  After the counter has overflowed and software clears the overflow status bit and resets the counter to less than MAX. The reset value to the counter is not clocked immediately so the overflow status bit will flip 'high (1)' and generate another PMI (if enabled) after which the reset value gets clocked into the counter. Therefore, software will get the interrupt, read the overflow status bit '1 for bit 34 while the counter value is less than MAX. Software should ignore this case....","Fixed counter 3","2000003","0","0","0","0","0","0"
"0x03","0x02","LD_BLOCKS.STORE_FORWARD","This event counts how many times the load operation got the true Block-on-Store blocking code preventing store forwarding. This includes cases when:
 - preceding store conflicts with the load (incomplete overlap);
 - store forwarding is impossible due to u-arch limitations;
 - preceding lock RMW operations are not forwarded;
 - store has the no-forward bit set (uncacheable/page-split/masked stores);
 - all-blocking stores are used (mostly, fences and port I/O);
and others.
The most common case is a load blocked due to its address range overlapping with a preceding smaller uncompleted store. Note: This event does not take into account cases of out-of-SW-control (for example, SbTailHit), unknown physical STA, and cases of blocking loads on store due to being non-WB memory type or a lock. These cases are covered by other events.
See the table of not supported store forwards in the Optimization Guide.","0,1,2,3","100003","0","0","0","0","0","0"
"0x03","0x08","LD_BLOCKS.NO_SR","This event counts the number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use.","0,1,2,3","100003","0","0","0","0","0","0"
"0x05","0x01","MISALIGN_MEM_REF.LOADS","This event counts speculative cache-line split load uops dispatched to the L1 cache.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x05","0x02","MISALIGN_MEM_REF.STORES","This event counts speculative cache line split store-address (STA) uops dispatched to the L1 cache.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x07","0x01","LD_BLOCKS_PARTIAL.ADDRESS_ALIAS","False dependencies in MOB due to partial compare","0,1,2,3","100003","0","0","0","0","0","0"
"0x08","0x01","DTLB_LOAD_MISSES.MISS_CAUSES_A_WALK","This event counts load misses in all DTLB levels that cause page walks of any page size (4K/2M/4M/1G).","0,1,2,3","100003","0","0","0","0","0","0"
"0x08","0x02","DTLB_LOAD_MISSES.WALK_COMPLETED_4K","This event counts load misses in all DTLB levels that cause a completed page walk (4K page size). The page walk can end with or without a fault.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x08","0x04","DTLB_LOAD_MISSES.WALK_COMPLETED_2M_4M","This event counts load misses in all DTLB levels that cause a completed page walk (2M and 4M page sizes). The page walk can end with or without a fault.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x08","0x10","DTLB_LOAD_MISSES.WALK_DURATION","This event counts the number of cycles while PMH is busy with the page walk.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x08","0x20","DTLB_LOAD_MISSES.STLB_HIT_4K","Load misses that miss the  DTLB and hit the STLB (4K)","0,1,2,3","2000003","0","0","0","0","0","0"
"0x08","0x40","DTLB_LOAD_MISSES.STLB_HIT_2M","Load misses that miss the  DTLB and hit the STLB (2M)","0,1,2,3","2000003","0","0","0","0","0","0"
"0x08","0x80","DTLB_LOAD_MISSES.PDE_CACHE_MISS","This event counts the number of DTLB load misses with the low part of the linear-to-physical address translation missed. Counting covers only STLB misses.","0,1,2,3","100003","0","0","0","0","0","0"
"0x0D","0x03","INT_MISC.RECOVERY_CYCLES","Cycles checkpoints in Resource Allocation Table (RAT) are recovering from JEClear or machine clear","0,1,2,3","2000003","0","0","0","0","0","0"
"0x0E","0x01","UOPS_ISSUED.ANY","This event counts the number of Uops issued by the Resource Allocation Table (RAT) to the reservation station (RS).","0,1,2,3","2000003","0","0","0","0","0","0"
"0x0E","0x10","UOPS_ISSUED.FLAGS_MERGE","Number of flags-merge uops being allocated. Such uops considered perf sensitive; added by GSR u-arch.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x0E","0x20","UOPS_ISSUED.SLOW_LEA","Number of slow LEA uops being allocated. A uop is generally considered SlowLea if it has 3 sources (e.g. 2 sources + immediate) regardless if as a result of LEA instruction or not.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x0E","0x40","UOPS_ISSUED.SINGLE_MUL","Number of Multiply packed/scalar single precision uops allocated","0,1,2,3","2000003","0","0","0","0","0","0"
"0x0E","0x01","UOPS_ISSUED.STALL_CYCLES","This event counts cycles during which the Resource Allocation Table (RAT) does not issue any Uops to the reservation station (RS) for the current thread.","0,1,2,3","2000003","0","0","0","1","0","0"
"0x0E","0x01","UOPS_ISSUED.CORE_STALL_CYCLES","This event counts cycles during which the Resource Allocation Table (RAT) does not issue any Uops to the reservation station (RS) for all hyperthreads.","0,1,2,3","2000003","0","0","0","1","1","0"
"0x24","0x21","L2_RQSTS.DEMAND_DATA_RD_MISS","This event counts the number of demand Data Read requests that miss L2 cache. Only not rejected loads are counted.","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x41","L2_RQSTS.DEMAND_DATA_RD_HIT","This event counts the number of demand Data Read requests that hit L2 cache. Only not rejected loads are counted.","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x30","L2_RQSTS.L2_PF_MISS","This event counts the number of requests from the L2 hardware prefetchers that miss L2 cache.","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x50","L2_RQSTS.L2_PF_HIT","This event counts the number of requests from the L2 hardware prefetchers that hit L2 cache. L3 prefetch new types","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0xE1","L2_RQSTS.ALL_DEMAND_DATA_RD","This event counts the number of demand Data Read requests (including requests from L1D hardware prefetchers). These loads may hit or miss L2 cache. Only non rejected loads are counted.","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0xE2","L2_RQSTS.ALL_RFO","This event counts the total number of RFO (read for ownership) requests to L2 cache. L2 RFO requests include both L1D demand RFO misses as well as L1D RFO prefetches.","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0xE4","L2_RQSTS.ALL_CODE_RD","This event counts the total number of L2 code requests.","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0xF8","L2_RQSTS.ALL_PF","This event counts the total number of requests from the L2 hardware prefetchers.","0,1,2,3","200003","0","0","0","0","0","0"
"0x27","0x50","L2_DEMAND_RQSTS.WB_HIT","This event counts the number of WB requests that hit L2 cache. ","0,1,2,3","200003","0","0","0","0","0","0"
"0x2e","0x41","LONGEST_LAT_CACHE.MISS","This event counts core-originated cacheable demand requests that miss the last level cache (LLC). Demand requests include loads, RFOs, and hardware prefetches from L1D, and instruction fetches from IFU.","0,1,2,3","100003","0","0","0","0","0","0"
"0x2e","0x4F","LONGEST_LAT_CACHE.REFERENCE","This event counts core-originated cacheable demand requests that refer to the last level cache (LLC). Demand requests include loads, RFOs, and hardware prefetches from L1D, and instruction fetches from IFU.","0,1,2,3","100003","0","0","0","0","0","0"
"0x3c","0x01","CPU_CLK_THREAD_UNHALTED.REF_XCLK","This is a fixed-frequency event programmed to general counters. It counts when the core is unhalted at 100 Mhz.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x48","0x01","L1D_PEND_MISS.PENDING","This event counts duration of L1D miss outstanding, that is each cycle number of Fill Buffers (FB) outstanding required by Demand Reads. FB either is held by demand loads, or it is held by non-demand loads and gets hit at least once by demand. The valid outstanding interval is defined until the FB deallocation by one of the following ways: from FB allocation, if FB is allocated by demand; from the demand Hit FB, if it is allocated by hardware or software prefetch.
Note: In the L1D, a Demand Read contains cacheable or noncacheable demand loads, including ones causing cache-line splits and reads due to page walks resulted from any request type.","2","2000003","0","0","0","0","0","0"
"0x48","0x01","L1D_PEND_MISS.PENDING_CYCLES","This event counts duration of L1D miss outstanding in cycles.","2","2000003","0","0","0","0","0","0"
"0x48","0x01","L1D_PEND_MISS.OCCURENCES","This event counts the number of L1D misses outstanding, using an edge detect to count transitions.","2","2000003","0","0","0","0","0","1"
"0x49","0x01","DTLB_STORE_MISSES.MISS_CAUSES_A_WALK","This event counts store misses in all DTLB levels that cause page walks of any page size (4K/2M/4M/1G).","0,1,2,3","100003","0","0","0","0","0","0"
"0x49","0x02","DTLB_STORE_MISSES.WALK_COMPLETED_4K","This event counts store misses in all DTLB levels that cause a completed page walk (4K page size). The page walk can end with or without a fault.","0,1,2,3","100003","0","0","0","0","0","0"
"0x49","0x04","DTLB_STORE_MISSES.WALK_COMPLETED_2M_4M","This event counts store misses in all DTLB levels that cause a completed page walk (2M and 4M page sizes). The page walk can end with or without a fault.","0,1,2,3","100003","0","0","0","0","0","0"
"0x49","0x10","DTLB_STORE_MISSES.WALK_DURATION","This event counts the number of cycles while PMH is busy with the page walk.","0,1,2,3","100003","0","0","0","0","0","0"
"0x49","0x20","DTLB_STORE_MISSES.STLB_HIT_4K","Store misses that miss the  DTLB and hit the STLB (4K)","0,1,2,3","100003","0","0","0","0","0","0"
"0x49","0x40","DTLB_STORE_MISSES.STLB_HIT_2M","Store misses that miss the  DTLB and hit the STLB (2M)","0,1,2,3","100003","0","0","0","0","0","0"
"0x49","0x80","DTLB_STORE_MISSES.PDE_CACHE_MISS","This event counts the number of DTLB store misses with the low part of the linear-to-physical address translation missed. Counting covers only STLB misses.","0,1,2,3","100003","0","0","0","0","0","0"
"0x4c","0x01","LOAD_HIT_PRE.SW_PF","This event counts all not software-prefetch load dispatches that hit the fill buffer (FB) allocated for the software prefetch. It can also be incremented by some lock instructions. So it should only be used with profiling so that the locks can be excluded by asm inspection of the nearby instructions.","0,1,2,3","100003","0","0","0","0","0","0"
"0x4c","0x02","LOAD_HIT_PRE.HW_PF","This event counts all not software-prefetch load dispatches that hit the fill buffer (FB) allocated for the hardware prefetch.","0,1,2,3","100003","0","0","0","0","0","0"
"0x51","0x01","L1D.REPLACEMENT","This event counts L1D data line replacements including opportunistic replacements, and replacements that require stall-for-replace or block-for-replace.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x54","0x01","TX_MEM.ABORT_CONFLICT","Number of times a transactional abort was signaled due to a data conflict on a transactionally accessed address","0,1,2,3","2000003","0","0","0","0","0","0"
"0x54","0x02","TX_MEM.ABORT_CAPACITY_WRITE","Number of times a transactional abort was signaled due to a data capacity limitation for transactional writes.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x54","0x04","TX_MEM.ABORT_HLE_STORE_TO_ELIDED_LOCK","Number of times a HLE transactional region aborted due to a non XRELEASE prefixed instruction writing to an elided lock in the elision buffer","0,1,2,3","2000003","0","0","0","0","0","0"
"0x54","0x08","TX_MEM.ABORT_HLE_ELISION_BUFFER_NOT_EMPTY","Number of times an HLE transactional execution aborted due to NoAllocatedElisionBuffer being non-zero.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x54","0x10","TX_MEM.ABORT_HLE_ELISION_BUFFER_MISMATCH","Number of times an HLE transactional execution aborted due to XRELEASE lock not satisfying the address and value requirements in the elision buffer","0,1,2,3","2000003","0","0","0","0","0","0"
"0x54","0x20","TX_MEM.ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT","Number of times an HLE transactional execution aborted due to an unsupported read alignment from the elision buffer.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x54","0x40","TX_MEM.HLE_ELISION_BUFFER_FULL","Number of times HLE lock could not be elided due to ElisionBufferAvailable being zero.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x58","0x01","MOVE_ELIMINATION.INT_ELIMINATED","Number of integer Move Elimination candidate uops that were eliminated.","0,1,2,3","1000003","0","0","0","0","0","0"
"0x58","0x02","MOVE_ELIMINATION.SIMD_ELIMINATED","Number of SIMD Move Elimination candidate uops that were eliminated.","0,1,2,3","1000003","0","0","0","0","0","0"
"0x58","0x04","MOVE_ELIMINATION.INT_NOT_ELIMINATED","Number of integer Move Elimination candidate uops that were not eliminated.","0,1,2,3","1000003","0","0","0","0","0","0"
"0x58","0x08","MOVE_ELIMINATION.SIMD_NOT_ELIMINATED","Number of SIMD Move Elimination candidate uops that were not eliminated.","0,1,2,3","1000003","0","0","0","0","0","0"
"0x5C","0x01","CPL_CYCLES.RING0","This event counts the unhalted core cycles during which the thread is in the ring 0 privileged mode.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x5C","0x02","CPL_CYCLES.RING123","This event counts unhalted core cycles during which the thread is in rings 1, 2, or 3.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x5C","0x01","CPL_CYCLES.RING0_TRANS","This event counts when there is a transition from ring 1,2 or 3 to ring0.","0,1,2,3","100007","0","0","0","0","0","1"
"0x5d","0x01","TX_EXEC.MISC1","Counts the number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x5d","0x02","TX_EXEC.MISC2","Counts the number of times a class of instructions (e.g., vzeroupper) that may cause a transactional abort was executed inside a transactional region","0,1,2,3","2000003","0","0","0","0","0","0"
"0x5d","0x04","TX_EXEC.MISC3","Counts the number of times an instruction execution caused the transactional nest count supported to be exceeded","0,1,2,3","2000003","0","0","0","0","0","0"
"0x5d","0x08","TX_EXEC.MISC4","Counts the number of times a XBEGIN instruction was executed inside an HLE transactional region.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x5d","0x10","TX_EXEC.MISC5","Counts the number of times an HLE XACQUIRE instruction was executed inside an RTM transactional region","0,1,2,3","2000003","0","0","0","0","0","0"
"0x5E","0x01","RS_EVENTS.EMPTY_CYCLES","This event counts cycles during which the reservation station (RS) is empty for the thread.
Note: In ST-mode, not active thread should drive 0. This is usually caused by severely costly branch mispredictions, or allocator/FE issues.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x60","0x01","OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD","This event counts the number of offcore outstanding Demand Data Read transactions in the super queue (SQ) every cycle. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor. See the corresponding Umask under OFFCORE_REQUESTS.
Note: A prefetch promoted to Demand is counted from the promotion point.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x60","0x02","OFFCORE_REQUESTS_OUTSTANDING.DEMAND_CODE_RD","This event counts the number of offcore outstanding Code Reads transactions in the super queue every cycle. The Offcore outstanding state of the transaction lasts from the L2 miss until the sending transaction completion to requestor (SQ deallocation). See the corresponding Umask under OFFCORE_REQUESTS.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x60","0x04","OFFCORE_REQUESTS_OUTSTANDING.DEMAND_RFO","This event counts the number of offcore outstanding RFO (store) transactions in the super queue (SQ) every cycle. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation). See corresponding Umask under OFFCORE_REQUESTS.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x60","0x08","OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD","This event counts the number of offcore outstanding cacheable Core Data Read transactions in the super queue every cycle. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation). See corresponding Umask under OFFCORE_REQUESTS.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x60","0x01","OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_DATA_RD","This event counts cycles when offcore outstanding Demand Data Read transactions are present in the super queue (SQ). A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation).","0,1,2,3","2000003","0","0","0","0","0","0"
"0x60","0x08","OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD","This event counts cycles when offcore outstanding cacheable Core Data Read transactions are present in the super queue. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation). See corresponding Umask under OFFCORE_REQUESTS.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x63","0x01","LOCK_CYCLES.SPLIT_LOCK_UC_LOCK_DURATION","This event counts cycles in which the L1 and L2 are locked due to a UC lock or split lock. A lock is asserted in case of locked memory access, due to noncacheable memory, locked operation that spans two cache lines, or a page walk from the noncacheable page table. L1D and L2 locks have a very high performance penalty and it is highly recommended to avoid such access.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x63","0x02","LOCK_CYCLES.CACHE_LOCK_DURATION","This event counts the number of cycles when the L1D is locked. It is a superset of the 0x1 mask (BUS_LOCK_CLOCKS.BUS_LOCK_DURATION).","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x02","IDQ.EMPTY","This counts the number of cycles that the instruction decoder queue is empty and can indicate that the application may be bound in the front end.  It does not determine whether there are uops being delivered to the Alloc stage since uops can be delivered by bypass skipping the Instruction Decode Queue (IDQ) when it is empty.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x04","IDQ.MITE_UOPS","This event counts the number of uops delivered to Instruction Decode Queue (IDQ) from the MITE path. Counting includes uops that may bypass the IDQ. This also means that uops are not being delivered from the Decode Stream Buffer (DSB).","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x08","IDQ.DSB_UOPS","This event counts the number of uops delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x10","IDQ.MS_DSB_UOPS","This event counts the number of uops initiated by Decode Stream Buffer (DSB) that are being delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x20","IDQ.MS_MITE_UOPS","This event counts the number of uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while the Microcode Sequenser (MS) is busy. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x30","IDQ.MS_UOPS","This event counts the total number of uops delivered to Instruction Decode Queue (IDQ) while the Microcode Sequenser (MS) is busy. Counting includes uops that may bypass the IDQ. Uops maybe initiated by Decode Stream Buffer (DSB) or MITE.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x30","IDQ.MS_CYCLES","This event counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) while the Microcode Sequenser (MS) is busy. Counting includes uops that may bypass the IDQ. Uops maybe initiated by Decode Stream Buffer (DSB) or MITE.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x04","IDQ.MITE_CYCLES","This event counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) from the MITE path. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x08","IDQ.DSB_CYCLES","This event counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x10","IDQ.MS_DSB_CYCLES","This event counts cycles during which uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x10","IDQ.MS_DSB_OCCUR","This event counts the number of deliveries to Instruction Decode Queue (IDQ) initiated by Decode Stream Buffer (DSB) while the Microcode Sequencer (MS) is busy. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","1"
"0x79","0x18","IDQ.ALL_DSB_CYCLES_4_UOPS","This event counts the number of cycles 4  uops were  delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x18","IDQ.ALL_DSB_CYCLES_ANY_UOPS","This event counts the number of cycles  uops were  delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Counting includes uops that may bypass the IDQ.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x24","IDQ.ALL_MITE_CYCLES_4_UOPS","This event counts the number of cycles 4  uops were  delivered to Instruction Decode Queue (IDQ) from the MITE path. Counting includes uops that may bypass the IDQ. This also means that uops are not being delivered from the Decode Stream Buffer (DSB).","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x24","IDQ.ALL_MITE_CYCLES_ANY_UOPS","This event counts the number of cycles  uops were delivered to Instruction Decode Queue (IDQ) from the MITE path. Counting includes uops that may bypass the IDQ. This also means that uops are not being delivered from the Decode Stream Buffer (DSB).","0,1,2,3","2000003","0","0","0","0","0","0"
"0x79","0x3c","IDQ.MITE_ALL_UOPS","This event counts the number of uops delivered to Instruction Decode Queue (IDQ) from the MITE path. Counting includes uops that may bypass the IDQ. This also means that uops are not being delivered from the Decode Stream Buffer (DSB).","0,1,2,3","2000003","0","0","0","0","0","0"
"0x80","0x02","ICACHE.MISSES","This event counts the number of instruction cache, streaming buffer and victim cache misses. Counting includes UC accesses.","0,1,2,3","200003","0","0","0","0","0","0"
"0x85","0x01","ITLB_MISSES.MISS_CAUSES_A_WALK","This event counts store misses in all DTLB levels that cause page walks of any page size (4K/2M/4M/1G).","0,1,2,3","100003","0","0","0","0","0","0"
"0x85","0x02","ITLB_MISSES.WALK_COMPLETED_4K","This event counts store misses in all DTLB levels that cause a completed page walk (4K page size). The page walk can end with or without a fault.","0,1,2,3","100003","0","0","0","0","0","0"
"0x85","0x04","ITLB_MISSES.WALK_COMPLETED_2M_4M","This event counts store misses in all DTLB levels that cause a completed page walk (2M and 4M page sizes). The page walk can end with or without a fault.","0,1,2,3","100003","0","0","0","0","0","0"
"0x85","0x10","ITLB_MISSES.WALK_DURATION","This event counts the number of cycles while PMH is busy with the page walk.","0,1,2,3","100003","0","0","0","0","0","0"
"0x85","0x20","ITLB_MISSES.STLB_HIT_4K","Core misses that miss the  DTLB and hit the STLB (4K)","0,1,2,3","100003","0","0","0","0","0","0"
"0x85","0x40","ITLB_MISSES.STLB_HIT_2M","Code misses that miss the  DTLB and hit the STLB (2M)","0,1,2,3","100003","0","0","0","0","0","0"
"0x87","0x01","ILD_STALL.LCP","This event counts stalls occured due to changing prefix length (66, 67 or REX.W when they change the length of the decoded instruction). Occurrences counting is proportional to the number of prefixes in a 16B-line. This may result in the following penalties: three-cycle penalty for each LCP in a 16-byte chunk.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x87","0x04","ILD_STALL.IQ_FULL","This event counts stall cycles when instructions cannot be written because IQ is full.
Note: If there is no Resource Allocation Table (RAT) stalls, it indicates the decoders issue.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x88","0x41","BR_INST_EXEC.NONTAKEN_CONDITIONAL","This event counts not taken macro-conditional branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0x81","BR_INST_EXEC.TAKEN_CONDITIONAL","This event counts taken speculative and retired macro-conditional branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0x82","BR_INST_EXEC.TAKEN_DIRECT_JUMP","This event counts taken speculative and retired macro-conditional branch instructions excluding calls and indirect branches.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0x84","BR_INST_EXEC.TAKEN_INDIRECT_JUMP_NON_CALL_RET","This event counts taken speculative and retired indirect branches excluding calls and return branches.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0x88","BR_INST_EXEC.TAKEN_INDIRECT_NEAR_RETURN","This event counts taken speculative and retired indirect branches that have a return mnemonic.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0x90","BR_INST_EXEC.TAKEN_DIRECT_NEAR_CALL","This event counts taken speculative and retired direct near calls.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0xA0","BR_INST_EXEC.TAKEN_INDIRECT_NEAR_CALL","This event counts taken speculative and retired indirect calls including both register and memory indirect.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0xC1","BR_INST_EXEC.ALL_CONDITIONAL","This event counts both taken and not taken speculative and retired macro-conditional branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0xC2","BR_INST_EXEC.ALL_DIRECT_JMP","This event counts both taken and not taken speculative and retired macro-unconditional branch instructions, excluding calls and indirects.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0xC4","BR_INST_EXEC.ALL_INDIRECT_JUMP_NON_CALL_RET","This event counts both taken and not taken speculative and retired indirect branches excluding calls and return branches.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0xC8","BR_INST_EXEC.ALL_INDIRECT_NEAR_RETURN","This event counts both taken and not taken speculative and retired indirect branches that have a return mnemonic.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0xD0","BR_INST_EXEC.ALL_DIRECT_NEAR_CALL","This event counts both taken and not taken speculative and retired direct near calls.","0,1,2,3","200003","0","0","0","0","0","0"
"0x88","0xFF","BR_INST_EXEC.ALL_BRANCHES","This event counts both taken and not taken speculative and retired branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x89","0x41","BR_MISP_EXEC.NONTAKEN_CONDITIONAL","This event counts not taken speculative and retired mispredicted macro conditional branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x89","0x81","BR_MISP_EXEC.TAKEN_CONDITIONAL","This event counts taken speculative and retired mispredicted macro conditional branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x89","0x84","BR_MISP_EXEC.TAKEN_INDIRECT_JUMP_NON_CALL_RET","This event counts taken speculative and retired mispredicted indirect branches excluding calls and returns. ","0,1,2,3","200003","0","0","0","0","0","0"
"0x89","0x88","BR_MISP_EXEC.TAKEN_RETURN_NEAR","This event counts taken speculative and retired mispredicted indirect branches that have a return mnemonic.","0,1,2,3","200003","0","0","0","0","0","0"
"0x89","0xC1","BR_MISP_EXEC.ALL_CONDITIONAL","This event counts both taken and not taken speculative and retired mispredicted macro conditional branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x89","0xC4","BR_MISP_EXEC.ALL_INDIRECT_JUMP_NON_CALL_RET","This event counts both taken and not taken mispredicted indirect branches excluding calls and returns.","0,1,2,3","200003","0","0","0","0","0","0"
"0x89","0xFF","BR_MISP_EXEC.ALL_BRANCHES","This event counts both taken and not taken speculative and retired mispredicted branch instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0x9c","0x01","IDQ_UOPS_NOT_DELIVERED.CORE","This event counts the number of uops not delivered to Resource Allocation Table (RAT) per thread adding “4 – x” when Resource Allocation Table (RAT) is not stalled and Instruction Decode Queue (IDQ) delivers x uops to Resource Allocation Table (RAT) (where x belongs to {0,1,2,3}). Counting does not cover cases when:
 a. IDQ-Resource Allocation Table (RAT) pipe serves the other thread;
 b. Resource Allocation Table (RAT) is stalled for the thread (including uop drops and clear BE conditions); 
 c. Instruction Decode Queue (IDQ) delivers four uops.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x9C","0x01","IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE","This event counts, on the per-thread basis, cycles when no uops are delivered to Resource Allocation Table (RAT). IDQ_Uops_Not_Delivered.core =4.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x9C","0x01","IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_1_UOP_DELIV.CORE","This event counts, on the per-thread basis, cycles when less than 1 uop is  delivered to Resource Allocation Table (RAT). IDQ_Uops_Not_Delivered.core >=3.","0,1,2,3","2000003","0","0","0","0","0","0"
"0x9C","0x01","IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_2_UOP_DELIV.CORE","Cycles with less than 2 uops delivered by the front end","0,1,2,3","2000003","0","0","0","0","0","0"
"0x9C","0x01","IDQ_UOPS_NOT_DELIVERED.CYCLES_LE_3_UOP_DELIV.CORE","Cycles with less than 3 uops delivered by the front end","0,1,2,3","2000003","0","0","0","0","0","0"
"0x9C","0x01","IDQ_UOPS_NOT_DELIVERED.CYCLES_FE_WAS_OK","Counts cycles FE delivered 4 uops or Resource Allocation Table (RAT) was stalling FE.","0,1,2,3","2000003","0","0","0","1","0","0"
"0xA1","0x01","UOPS_EXECUTED_PORT.PORT_0","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 0.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA1","0x02","UOPS_EXECUTED_PORT.PORT_1","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 1.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA1","0x04","UOPS_EXECUTED_PORT.PORT_2","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 2.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA1","0x08","UOPS_EXECUTED_PORT.PORT_3","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 3.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA1","0x10","UOPS_EXECUTED_PORT.PORT_4","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 4.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA1","0x20","UOPS_EXECUTED_PORT.PORT_5","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 5.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA1","0x40","UOPS_EXECUTED_PORT.PORT_6","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 6.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA1","0x80","UOPS_EXECUTED_PORT.PORT_7","This event counts, on the per-thread basis, cycles during which uops are dispatched from the Reservation Station (RS) to port 7.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA2","0x01","RESOURCE_STALLS.ANY","This event counts resource-related stall cycles. Reasons for stalls can be as follows:
 - *any* u-arch structure got full (LB, SB, RS, ROB, BOB, LM, Physical Register Reclaim Table (PRRT), or Physical History Table (PHT) slots)
 - *any* u-arch structure got empty (like INT/SIMD FreeLists)
 - FPU control word (FPCW), MXCSR
and others. This counts cycles that the pipeline backend blocked uop delivery from the front end.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA2","0x04","RESOURCE_STALLS.RS","This event counts stall cycles caused by absence of eligible entries in the reservation station (RS). This may result from RS overflow, or from RS deallocation because of the RS array Write Port allocation scheme (each RS entry has two write ports instead of four. As a result, empty entries could not be used, although RS is not really full). This counts cycles that the pipeline backend blocked uop delivery from the front end.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA2","0x08","RESOURCE_STALLS.SB","This event counts stall cycles caused by the store buffer (SB) overflow (excluding draining from synch). This counts cycles that the pipeline backend blocked uop delivery from the front end.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA2","0x10","RESOURCE_STALLS.ROB","This event counts ROB full stall cycles. This counts cycles that the pipeline backend blocked uop delivery from the front end.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA3","0x01","CYCLE_ACTIVITY.CYCLES_L2_PENDING","Counts number of cycles the CPU has at least one pending  demand* load request missing the L2 cache.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA3","0x08","CYCLE_ACTIVITY.CYCLES_L1D_PENDING","Counts number of cycles the CPU has at least one pending  demand load request missing the L1 data cache.","2","2000003","0","0","0","0","0","0"
"0xA3","0x02","CYCLE_ACTIVITY.CYCLES_LDM_PENDING","Counts number of cycles the CPU has at least one pending  demand load request (that is cycles with non-completed load waiting for its data from memory subsystem)","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA3","0x04","CYCLE_ACTIVITY.CYCLES_NO_EXECUTE","Counts number of cycles nothing is executed on any execution port.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA3","0x05","CYCLE_ACTIVITY.STALLS_L2_PENDING","Execution stalls due to L2 cache misses.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xA3","0x06","CYCLE_ACTIVITY.STALLS_LDM_PENDING","Execution stalls due to memory subsystem.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xa8","0x01","LSD.UOPS","Number of Uops delivered by the LSD.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xAB","0x02","DSB2MITE_SWITCHES.PENALTY_CYCLES","This event counts Decode Stream Buffer (DSB)-to-MITE switch true penalty cycles. These cycles do not include uops routed through because of the switch itself, for example, when Instruction Decode Queue (IDQ) pre-allocation is unavailable, or Instruction Decode Queue (IDQ) is full. SBD-to-MITE switch true penalty cycles happen after the merge mux (MM) receives Decode Stream Buffer (DSB) Sync-indication until receiving the first MITE uop. 
MM is placed before Instruction Decode Queue (IDQ) to merge uops being fed from the MITE and Decode Stream Buffer (DSB) paths. Decode Stream Buffer (DSB) inserts the Sync-indication whenever a Decode Stream Buffer (DSB)-to-MITE switch occurs.
Penalty: A Decode Stream Buffer (DSB) hit followed by a Decode Stream Buffer (DSB) miss can cost up to six cycles in which no uops are delivered to the IDQ. Most often, such switches from the Decode Stream Buffer (DSB) to the legacy pipeline cost 0–2 cycles.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xae","0x01","ITLB.ITLB_FLUSH","This event counts the number of flushes of the big or small ITLB pages. Counting include both TLB Flush (covering all sets) and TLB Set Clear (set-specific).","0,1,2,3","100007","0","0","0","0","0","0"
"0xb0","0x01","OFFCORE_REQUESTS.DEMAND_DATA_RD","This event counts the Demand Data Read requests sent to uncore. Use it in conjunction with OFFCORE_REQUESTS_OUTSTANDING to determine average latency in the uncore.","0,1,2,3","100003","0","0","0","0","0","0"
"0xb0","0x02","OFFCORE_REQUESTS.DEMAND_CODE_RD","This event counts both cacheable and noncachaeble code read requests.","0,1,2,3","100003","0","0","0","0","0","0"
"0xb0","0x04","OFFCORE_REQUESTS.DEMAND_RFO","This event counts the demand RFO (read for ownership) requests including regular RFOs, locks, ItoM.","0,1,2,3","100003","0","0","0","0","0","0"
"0xb0","0x08","OFFCORE_REQUESTS.ALL_DATA_RD","This event counts the demand and prefetch data reads. All Core Data Reads include cacheable Demands and L2 prefetchers (not L3 prefetchers). Counting also covers reads due to page walks resulted from any request type.","0,1,2,3","100003","0","0","0","0","0","0"
"0xb1","0x02","UOPS_EXECUTED.CORE","Number of uops executed on the core.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xB1","0x01","UOPS_EXECUTED.STALL_CYCLES","This event counts cycles during which no uops were dispatched from the Reservation Station (RS) per thread.","0,1,2,3","2000003","0","0","0","1","0","0"
"0xBC","0x11","PAGE_WALKER_LOADS.DTLB_L1","Number of DTLB page walker hits in the L1+FB","0,1,2,3","2000003","0","0","0","0","0","0"
"0xBC","0x21","PAGE_WALKER_LOADS.ITLB_L1","Number of ITLB page walker hits in the L1+FB","0,1,2,3","2000003","0","0","0","0","0","0"
"0xBC","0x12","PAGE_WALKER_LOADS.DTLB_L2","Number of DTLB page walker hits in the L2","0,1,2,3","2000003","0","0","0","0","0","0"
"0xBC","0x22","PAGE_WALKER_LOADS.ITLB_L2","Number of ITLB page walker hits in the L2","0,1,2,3","2000003","0","0","0","0","0","0"
"0xBC","0x14","PAGE_WALKER_LOADS.DTLB_L3","Number of DTLB page walker hits in the L3 + XSNP","0,1,2,3","2000003","0","0","0","0","0","0"
"0xBC","0x24","PAGE_WALKER_LOADS.ITLB_L3","Number of ITLB page walker hits in the L3 + XSNP","0,1,2,3","2000003","0","0","0","0","0","0"
"0xBC","0x18","PAGE_WALKER_LOADS.DTLB_MEMORY","Number of DTLB page walker hits in Memory","0,1,2,3","2000003","0","0","0","0","0","0"
"0xBD","0x01","TLB_FLUSH.DTLB_THREAD","This event counts the number of DTLB flush attempts of the thread-specific entries. ","0,1,2,3","100007","0","0","0","0","0","0"
"0xBD","0x20","TLB_FLUSH.STLB_ANY","This event counts the number of any STLB flush attempts (such as entire, VPID, PCID, InvPage, CR3 write, and so on).","0,1,2,3","100007","0","0","0","0","0","0"
"0xC0","0x00","INST_RETIRED.ANY_P","This event counts the number of instructions (EOMs) retired. Counting covers macro-fused instructions individually (that is, increments by two).","0,1,2,3","2000003","0","0","0","0","0","0"
"0xC0","0x01","INST_RETIRED.PREC_DIST_PS","This is a precise version (that is, uses PEBS) of the event that counts instructions retired.","1","2000003","0","0","1","0","0","0"
"0xC1","0x08","OTHER_ASSISTS.AVX_TO_SSE","Number of transitions from AVX-256 to legacy SSE when penalty applicable.","0,1,2,3","100003","0","0","0","0","0","0"
"0xC1","0x10","OTHER_ASSISTS.SSE_TO_AVX","Number of transitions from SSE to AVX-256 when penalty applicable.","0,1,2,3","100003","0","0","0","0","0","0"
"0xC1","0x40","OTHER_ASSISTS.ANY_WB_ASSIST","Number of times any microcode assist is invoked by HW upon uop writeback.","0,1,2,3","100003","0","0","0","0","0","0"
"0xC2","0x01","UOPS_RETIRED.ALL","Actually retired uops.","0,1,2,3","2000003","0","0","1","0","0","0"
"0xC2","0x01","UOPS_RETIRED.ALL_PS","Actually retired uops. (Uses PEBS)","0,1,2,3","2000003","0","0","1","0","0","0"
"0xC2","0x02","UOPS_RETIRED.RETIRE_SLOTS","Retirement slots used.","0,1,2,3","2000003","0","0","1","0","0","0"
"0xC2","0x02","UOPS_RETIRED.RETIRE_SLOTS_PS","Retirement slots used. (Uses PEBS)","0,1,2,3","2000003","0","0","1","0","0","0"
"0xC2","0x01","UOPS_RETIRED.STALL_CYCLES","Cycles without actually retired uops.","0,1,2,3","2000003","0","0","0","1","0","0"
"0xC2","0x01","UOPS_RETIRED.TOTAL_CYCLES","Number of cycles using always true condition (uops_ret < 16) applied to non PEBS uops retired event.  ","0,1,2,3","2000003","0","0","0","1","0","0"
"0xC2","0x01","UOPS_RETIRED.CORE_STALL_CYCLES","Cycles without actually retired uops.","0,1,2,3","2000003","0","0","0","1","0","0"
"0xC3","0x01","MACHINE_CLEARS.CYCLES","Cycles there was a Nuke. Account for both thread-specific and All Thread Nukes.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xC3","0x02","MACHINE_CLEARS.MEMORY_ORDERING","This event counts the number of memory ordering Machine Clears detected. Memory Ordering Machine Clears can result from one of the following:
1. memory disambiguation,
2. external snoop, or
3. cross SMT-HW-thread snoop (stores) hitting load buffer.","0,1,2,3","100003","0","0","0","0","0","0"
"0xC3","0x04","MACHINE_CLEARS.SMC","This event counts self-modifying code (SMC) detected, which causes a machine clear.","0,1,2,3","100003","0","0","0","0","0","0"
"0xC3","0x20","MACHINE_CLEARS.MASKMOV","Maskmov false fault - counts number of time ucode passes through Maskmov flow due to instruction's mask being 0 while the flow was completed without raising a fault.","0,1,2,3","100003","0","0","0","0","0","0"
"0xC4","0x01","BR_INST_RETIRED.CONDITIONAL","Conditional branch instructions retired.","0,1,2,3","400009","0","0","1","0","0","0"
"0xC4","0x01","BR_INST_RETIRED.CONDITIONAL_PS","Conditional branch instructions retired. (Uses PEBS)","0,1,2,3","400009","0","0","1","0","0","0"
"0xC4","0x02","BR_INST_RETIRED.NEAR_CALL","Direct and indirect near call instructions retired.","0,1,2,3","100007","0","0","1","0","0","0"
"0xC4","0x02","BR_INST_RETIRED.NEAR_CALL_PS","Direct and indirect near call instructions retired. (Uses PEBS)","0,1,2,3","100007","0","0","1","0","0","0"
"0xC4","0x00","BR_INST_RETIRED.ALL_BRANCHES","This event counts all (macro) branch instructions retired.","0,1,2,3","400009","0","0","0","0","0","0"
"0xC4","0x08","BR_INST_RETIRED.NEAR_RETURN","Return instructions retired.","0,1,2,3","100007","0","0","1","0","0","0"
"0xC4","0x08","BR_INST_RETIRED.NEAR_RETURN_PS","Return instructions retired. (Uses PEBS)","0,1,2,3","100007","0","0","1","0","0","0"
"0xC4","0x10","BR_INST_RETIRED.NOT_TAKEN","Not taken branch instructions retired.","0,1,2,3","400009","0","0","0","0","0","0"
"0xC4","0x20","BR_INST_RETIRED.NEAR_TAKEN","Taken branch instructions retired.","0,1,2,3","400009","0","0","1","0","0","0"
"0xC4","0x20","BR_INST_RETIRED.NEAR_TAKEN_PS","Taken branch instructions retired. (Uses PEBS)","0,1,2,3","400009","0","0","1","0","0","0"
"0xC4","0x40","BR_INST_RETIRED.FAR_BRANCH","Far branch instructions retired.","0,1,2,3","100007","0","0","0","0","0","0"
"0xC4","0x04","BR_INST_RETIRED.ALL_BRANCHES_PS","This is a precise version of BR_INST_RETIRED.ALL_BRANCHES that counts all (macro) branch instructions retired.","0,1,2,3","400009","0","0","1","0","0","0"
"0xC4","0x02","BR_INST_RETIRED.NEAR_CALL_R3","Direct and indirect macro near call instructions retired (captured in ring 3).","0,1,2,3","100007","0","0","1","0","0","0"
"0xC4","0x02","BR_INST_RETIRED.NEAR_CALL_R3_PS","Direct and indirect macro near call instructions retired (captured in ring 3). (Uses PEBS)","0,1,2,3","100007","0","0","1","0","0","0"
"0xC5","0x01","BR_MISP_RETIRED.CONDITIONAL","Mispredicted conditional branch instructions retired.","0,1,2,3","400009","0","0","1","0","0","0"
"0xC5","0x01","BR_MISP_RETIRED.CONDITIONAL_PS","Mispredicted conditional branch instructions retired. (Uses PEBS)","0,1,2,3","400009","0","0","1","0","0","0"
"0xC5","0x00","BR_MISP_RETIRED.ALL_BRANCHES","This event counts all mispredicted macro branch instructions retired.","0,1,2,3","400009","0","0","0","0","0","0"
"0xC5","0x04","BR_MISP_RETIRED.ALL_BRANCHES_PS","This is a precise version of BR_MISP_RETIRED.ALL_BRANCHES that counts all mispredicted macro branch instructions retired.","0,1,2,3","400009","0","0","1","0","0","0"
"0xc8","0x01","HLE_RETIRED.START","Number of times an HLE execution started.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc8","0x02","HLE_RETIRED.COMMIT","Number of times an HLE execution successfully committed","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc8","0x04","HLE_RETIRED.ABORTED","Number of times an HLE execution aborted due to any reasons (multiple categories may count as one). ","0,1,2,3","2000003","0","0","1","0","0","0"
"0xc8","0x04","HLE_RETIRED.ABORTED_PS","Number of times an HLE execution aborted due to any reasons (multiple categories may count as one).  (Uses PEBS)","0,1,2,3","2000003","0","0","1","0","0","0"
"0xc8","0x08","HLE_RETIRED.ABORTED_MISC1","Number of times an HLE execution aborted due to various memory events (e.g., read/write capacity and conflicts).","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc8","0x10","HLE_RETIRED.ABORTED_MISC2","Number of times an HLE execution aborted due to uncommon conditions","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc8","0x20","HLE_RETIRED.ABORTED_MISC3","Number of times an HLE execution aborted due to HLE-unfriendly instructions","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc8","0x40","HLE_RETIRED.ABORTED_MISC4","Number of times an HLE execution aborted due to incompatible memory type","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc8","0x80","HLE_RETIRED.ABORTED_MISC5","Number of times an HLE execution aborted due to none of the previous 4 categories (e.g. interrupts)","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc9","0x01","RTM_RETIRED.START","Number of times an RTM execution started.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc9","0x02","RTM_RETIRED.COMMIT","Number of times an RTM execution successfully committed","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc9","0x04","RTM_RETIRED.ABORTED","Number of times an RTM execution aborted due to any reasons (multiple categories may count as one). ","0,1,2,3","2000003","0","0","1","0","0","0"
"0xc9","0x04","RTM_RETIRED.ABORTED_PS","Number of times an RTM execution aborted due to any reasons (multiple categories may count as one).  (Uses PEBS)","0,1,2,3","2000003","0","0","1","0","0","0"
"0xc9","0x08","RTM_RETIRED.ABORTED_MISC1","Number of times an RTM abort was attributed to a Memory condition (See TSX_Mem event for additional details)","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc9","0x10","RTM_RETIRED.ABORTED_MISC2","Number of times an RTM execution aborted due to various memory events (e.g., read/write capacity and conflicts).","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc9","0x20","RTM_RETIRED.ABORTED_MISC3","Number of times an RTM execution aborted due to HLE-unfriendly instructions","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc9","0x40","RTM_RETIRED.ABORTED_MISC4","Number of times an RTM execution aborted due to incompatible memory type","0,1,2,3","2000003","0","0","0","0","0","0"
"0xc9","0x80","RTM_RETIRED.ABORTED_MISC5","Number of times an RTM execution aborted due to none of the previous 4 categories (e.g. interrupt)","0,1,2,3","2000003","0","0","0","0","0","0"
"0xCA","0x02","FP_ASSIST.X87_OUTPUT","Number of X87 assists due to output value.","0,1,2,3","100003","0","0","0","0","0","0"
"0xCA","0x04","FP_ASSIST.X87_INPUT","Number of X87 assists due to input value.","0,1,2,3","100003","0","0","0","0","0","0"
"0xCA","0x08","FP_ASSIST.SIMD_OUTPUT","Number of SIMD FP assists due to Output values","0,1,2,3","100003","0","0","0","0","0","0"
"0xCA","0x10","FP_ASSIST.SIMD_INPUT","Number of SIMD FP assists due to input values","0,1,2,3","100003","0","0","0","0","0","0"
"0xCA","0x1E","FP_ASSIST.ANY","This event counts cycles with any input and output SSE or x87 FP assist. If an input and output assist are detected on the same cycle the event increments by 1. ","0,1,2,3","100003","0","0","0","0","0","0"
"0xCC","0x20","ROB_MISC_EVENTS.LBR_INSERTS","This event counts cases of saving new LBR records by hardware. This assumes proper enabling of LBRs and takes into account LBR filtering done by the LBR_SELECT register.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_4","Loads with latency value being above 4","3","100003","0x3F6","0x4","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_4_PS","Loads with latency value being above 4 (Uses PEBS)","3","100003","0x3F6","0x4","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_8","Loads with latency value being above 8","3","50021","0x3F6","0x8","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_8_PS","Loads with latency value being above 8 (Uses PEBS)","3","50021","0x3F6","0x8","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_16","Loads with latency value being above 16","3","20011","0x3F6","0x10","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_16_PS","Loads with latency value being above 16 (Uses PEBS)","3","20011","0x3F6","0x10","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_32","Loads with latency value being above 32","3","100007","0x3F6","0x20","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_32_PS","Loads with latency value being above 32 (Uses PEBS)","3","100007","0x3F6","0x20","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_64","Loads with latency value being above 64","3","2003","0x3F6","0x40","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_64_PS","Loads with latency value being above 64 (Uses PEBS)","3","2003","0x3F6","0x40","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_128","Loads with latency value being above 128","3","1009","0x3F6","0x80","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_128_PS","Loads with latency value being above 128 (Uses PEBS)","3","1009","0x3F6","0x80","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_256","Loads with latency value being above 256","3","503","0x3F6","0x100","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_256_PS","Loads with latency value being above 256 (Uses PEBS)","3","503","0x3F6","0x100","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_512","Loads with latency value being above 512","3","101","0x3F6","0x200","1","0","0","0"
"0xCD","0x01","MEM_TRANS_RETIRED.LOAD_LATENCY_GT_512_PS","Loads with latency value being above 512 (Uses PEBS)","3","101","0x3F6","0x200","1","0","0","0"
"0xD0","0x11","MEM_UOPS_RETIRED.STLB_MISS_LOADS","Load uops with true STLB miss retired to architected path.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x11","MEM_UOPS_RETIRED.STLB_MISS_LOADS_PS","Load uops with true STLB miss retired to architected path. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x12","MEM_UOPS_RETIRED.STLB_MISS_STORES","Store uops with true STLB miss retired to architected path.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x12","MEM_UOPS_RETIRED.STLB_MISS_STORES_PS","Store uops with true STLB miss retired to architected path. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x21","MEM_UOPS_RETIRED.LOCK_LOADS","Load uops with locked access retired to architected path.","0,1,2,3","100007","0","0","1","0","0","0"
"0xD0","0x21","MEM_UOPS_RETIRED.LOCK_LOADS_PS","Load uops with locked access retired to architected path. (Uses PEBS)","0,1,2,3","100007","0","0","1","0","0","0"
"0xD0","0x41","MEM_UOPS_RETIRED.SPLIT_LOADS","Line-splitted load uops retired to architected path.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x41","MEM_UOPS_RETIRED.SPLIT_LOADS_PS","Line-splitted load uops retired to architected path. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x42","MEM_UOPS_RETIRED.SPLIT_STORES","Line-splitted store uops retired to architected path.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x42","MEM_UOPS_RETIRED.SPLIT_STORES_PS","Line-splitted store uops retired to architected path. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD0","0x81","MEM_UOPS_RETIRED.ALL_LOADS","Load uops retired to architected path with filter on bits 0 and 1 applied.","0,1,2,3","2000003","0","0","1","0","0","0"
"0xD0","0x81","MEM_UOPS_RETIRED.ALL_LOADS_PS","Load uops retired to architected path with filter on bits 0 and 1 applied. (Uses PEBS)","0,1,2,3","2000003","0","0","1","0","0","0"
"0xD0","0x82","MEM_UOPS_RETIRED.ALL_STORES","Store uops retired to architected path with filter on bits 0 and 1 applied.","0,1,2,3","2000003","0","0","1","0","0","0"
"0xD0","0x82","MEM_UOPS_RETIRED.ALL_STORES_PS","Store uops retired to architected path with filter on bits 0 and 1 applied. (Uses PEBS)","0,1,2,3","2000003","0","0","1","0","0","0"
"0xD1","0x01","MEM_LOAD_UOPS_RETIRED.L1_HIT","Retired load uops with L1 cache hits as data sources.","0,1,2,3","2000003","0","0","1","0","0","0"
"0xD1","0x01","MEM_LOAD_UOPS_RETIRED.L1_HIT_PS","Retired load uops with L1 cache hits as data sources. (Uses PEBS)","0,1,2,3","2000003","0","0","1","0","0","0"
"0xD1","0x02","MEM_LOAD_UOPS_RETIRED.L2_HIT","Retired load uops with L2 cache hits as data sources.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD1","0x02","MEM_LOAD_UOPS_RETIRED.L2_HIT_PS","Retired load uops with L2 cache hits as data sources. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD1","0x04","MEM_LOAD_UOPS_RETIRED.L3_HIT","Retired load uops which data sources were data hits in L3 without snoops required.","0,1,2,3","50021","0","0","1","0","0","0"
"0xD1","0x04","MEM_LOAD_UOPS_RETIRED.L3_HIT_PS","Retired load uops which data sources were data hits in L3 without snoops required. (Uses PEBS)","0,1,2,3","50021","0","0","1","0","0","0"
"0xD1","0x08","MEM_LOAD_UOPS_RETIRED.L1_MISS","Retired load uops misses in L1 cache as data sources.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD1","0x08","MEM_LOAD_UOPS_RETIRED.L1_MISS_PS","Retired load uops misses in L1 cache as data sources. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD1","0x10","MEM_LOAD_UOPS_RETIRED.L2_MISS","Miss in mid-level (L2) cache. Excludes Unknown data-source.","0,1,2,3","50021","0","0","1","0","0","0"
"0xD1","0x10","MEM_LOAD_UOPS_RETIRED.L2_MISS_PS","Miss in mid-level (L2) cache. Excludes Unknown data-source. (Uses PEBS)","0,1,2,3","50021","0","0","1","0","0","0"
"0xD1","0x20","MEM_LOAD_UOPS_RETIRED.L3_MISS","Miss in last-level (L3) cache. Excludes Unknown data-source.","0,1,2,3","100007","0","0","1","0","0","0"
"0xD1","0x20","MEM_LOAD_UOPS_RETIRED.L3_MISS_PS","Miss in last-level (L3) cache. Excludes Unknown data-source. (Uses PEBS)","0,1,2,3","100007","0","0","1","0","0","0"
"0xD1","0x40","MEM_LOAD_UOPS_RETIRED.HIT_LFB","Retired load uops which data sources were load uops missed L1 but hit FB due to preceding miss to the same cache line with data not ready.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD1","0x40","MEM_LOAD_UOPS_RETIRED.HIT_LFB_PS","Retired load uops which data sources were load uops missed L1 but hit FB due to preceding miss to the same cache line with data not ready. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD2","0x01","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS","Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache.","0,1,2,3","20011","0","0","1","0","0","0"
"0xD2","0x01","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_MISS_PS","Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache. (Uses PEBS)","0,1,2,3","20011","0","0","1","0","0","0"
"0xD2","0x02","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT","Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache.","0,1,2,3","20011","0","0","1","0","0","0"
"0xD2","0x02","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HIT_PS","Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache. (Uses PEBS)","0,1,2,3","20011","0","0","1","0","0","0"
"0xD2","0x04","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM","Retired load uops which data sources were HitM responses from shared L3.","0,1,2,3","20011","0","0","1","0","0","0"
"0xD2","0x04","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_HITM_PS","Retired load uops which data sources were HitM responses from shared L3. (Uses PEBS)","0,1,2,3","20011","0","0","1","0","0","0"
"0xD2","0x08","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_NONE","Retired load uops which data sources were hits in L3 without snoops required.","0,1,2,3","100003","0","0","1","0","0","0"
"0xD2","0x08","MEM_LOAD_UOPS_L3_HIT_RETIRED.XSNP_NONE_PS","Retired load uops which data sources were hits in L3 without snoops required. (Uses PEBS)","0,1,2,3","100003","0","0","1","0","0","0"
"0xD3","0x01","MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM","Data from local DRAM either Snoop not needed or Snoop Miss (RspI)","0,1,2,3","100007","0","0","1","0","0","0"
"0xD3","0x01","MEM_LOAD_UOPS_L3_MISS_RETIRED.LOCAL_DRAM_PS","Data from local DRAM either Snoop not needed or Snoop Miss (RspI) (Uses PEBS)","0,1,2,3","100007","0","0","1","0","0","0"
"0x3c","0x00","CPU_CLK_UNHALTED.THREAD_P","This is an architectural event that counts the number of thread cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. The core frequency may change from time to time due to power or thermal throttling. For this reason, this event may have a changing ratio with regards to wall clock time.","0,1,2,3","2000003","0","0","0","0","0","0"
"0xf0","0x01","L2_TRANS.DEMAND_DATA_RD","This event counts Demand Data Read requests that access L2 cache, including rejects.","0,1,2,3","200003","0","0","0","0","0","0"
"0xf0","0x02","L2_TRANS.RFO","This event counts Read for Ownership (RFO) requests that access L2 cache.","0,1,2,3","200003","0","0","0","0","0","0"
"0xf0","0x04","L2_TRANS.CODE_RD","This event counts the number of L2 cache accesses when fetching instructions.","0,1,2,3","200003","0","0","0","0","0","0"
"0xf0","0x08","L2_TRANS.ALL_PF","This event counts L2 or L3 HW prefetches that access L2 cache including rejects. ","0,1,2,3","200003","0","0","0","0","0","0"
"0xf0","0x10","L2_TRANS.L1D_WB","This event counts L1D writebacks that access L2 cache.","0,1,2,3","200003","0","0","0","0","0","0"
"0xf0","0x20","L2_TRANS.L2_FILL","This event counts L2 fill requests that access L2 cache.","0,1,2,3","200003","0","0","0","0","0","0"
"0xf0","0x40","L2_TRANS.L2_WB","This event counts L2 writebacks that access L2 cache.","0,1,2,3","200003","0","0","0","0","0","0"
"0xf0","0x80","L2_TRANS.ALL_REQUESTS","This event counts transactions that access the L2 pipe including snoops, pagewalks, and so on.","0,1,2,3","200003","0","0","0","0","0","0"
"0xf1","0x01","L2_LINES_IN.I","This event counts the number of L2 cache lines in the Invalidate state filling the L2. Counting does not cover rejects.","0,1,2,3","100003","0","0","0","0","0","0"
"0xf1","0x02","L2_LINES_IN.S","This event counts the number of L2 cache lines in the Shared state filling the L2. Counting does not cover rejects.","0,1,2,3","100003","0","0","0","0","0","0"
"0xf1","0x04","L2_LINES_IN.E","This event counts the number of L2 cache lines in the Exclusive state filling the L2. Counting does not cover rejects.","0,1,2,3","100003","0","0","0","0","0","0"
"0xF1","0x07","L2_LINES_IN.ALL","This event counts the number of L2 cache lines filling the L2. Counting does not cover rejects.","0,1,2,3","100003","0","0","0","0","0","0"
"0xF2","0x05","L2_LINES_OUT.DEMAND_CLEAN","Clean L2 cache lines evicted by demand","0,1,2,3","100003","0","0","0","0","0","0"
"0xF2","0x06","L2_LINES_OUT.DEMAND_DIRTY","Dirty L2 cache lines evicted by demand","0,1,2,3","100003","0","0","0","0","0","0"
"0x89","0xA0","BR_MISP_EXEC.TAKEN_INDIRECT_NEAR_CALL","Taken speculative and retired mispredicted indirect calls","0,1,2,3","200003","0","0","0","0","0","0"
"0xA1","0x01","UOPS_EXECUTED_PORT.PORT_0_CORE","Cycles per core when uops are exectuted in port 0","0,1,2,3","2000003","0","0","0","0","1","0"
"0xA1","0x02","UOPS_EXECUTED_PORT.PORT_1_CORE","Cycles per core when uops are exectuted in port 1","0,1,2,3","2000003","0","0","0","0","1","0"
"0xA1","0x04","UOPS_EXECUTED_PORT.PORT_2_CORE","Cycles per core when uops are dispatched to port 2","0,1,2,3","2000003","0","0","0","0","1","0"
"0xA1","0x08","UOPS_EXECUTED_PORT.PORT_3_CORE","Cycles per core when uops are dispatched to port 3","0,1,2,3","2000003","0","0","0","0","1","0"
"0xA1","0x10","UOPS_EXECUTED_PORT.PORT_4_CORE","Cycles per core when uops are exectuted in port 4","0,1,2,3","2000003","0","0","0","0","1","0"
"0xA1","0x20","UOPS_EXECUTED_PORT.PORT_5_CORE","Cycles per core when uops are exectuted in port 5","0,1,2,3","2000003","0","0","0","0","1","0"
"0xA1","0x40","UOPS_EXECUTED_PORT.PORT_6_CORE","Cycles per core when uops are exectuted in port 6","0,1,2,3","2000003","0","0","0","0","1","0"
"0xA1","0x80","UOPS_EXECUTED_PORT.PORT_7_CORE","Cycles per core when uops are dispatched to port 7","0,1,2,3","2000003","0","0","0","0","1","0"
"0xC5","0x20","BR_MISP_RETIRED.NEAR_TAKEN","number of near branch instructions retired that were mispredicted and taken.","0,1,2,3","400009","0","0","1","0","0","0"
"0xC5","0x20","BR_MISP_RETIRED.NEAR_TAKEN_PS","number of near branch instructions retired that were mispredicted and taken. (Uses PEBS)","0,1,2,3","400009","0","0","1","0","0","0"
"0x08","0x0e","DTLB_LOAD_MISSES.WALK_COMPLETED","Demand load Miss in all translation lookaside buffer (TLB) levels causes a page walk that completes of any page size.","0,1,2,3","100003","0","0","0","0","0","0"
"0x08","0x60","DTLB_LOAD_MISSES.STLB_HIT","Load operations that miss the first DTLB level but hit the second and do not cause page walks","0,1,2,3","2000003","0","0","0","0","0","0"
"0x24","0x42","L2_RQSTS.RFO_HIT","RFO requests that hit L2 cache","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x22","L2_RQSTS.RFO_MISS","RFO requests that miss L2 cache","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x44","L2_RQSTS.CODE_RD_HIT","L2 cache hits when fetching instructions, code reads.","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x24","L2_RQSTS.CODE_RD_MISS","L2 cache misses when fetching instructions","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x27","L2_RQSTS.ALL_DEMAND_MISS","Demand requests that miss L2 cache","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0xe7","L2_RQSTS.ALL_DEMAND_REFERENCES","Demand requests to L2 cache","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0x3F","L2_RQSTS.MISS","All requests that miss L2 cache","0,1,2,3","200003","0","0","0","0","0","0"
"0x24","0xFF","L2_RQSTS.REFERENCES","All L2 requests","0,1,2,3","200003","0","0","0","0","0","0"
"0x49","0x0e","DTLB_STORE_MISSES.WALK_COMPLETED","Store misses in all DTLB levels that cause completed page walks","0,1,2,3","100003","0","0","0","0","0","0"
"0x49","0x60","DTLB_STORE_MISSES.STLB_HIT","Store operations that miss the first TLB level but hit the second and do not cause page walks","0,1,2,3","100003","0","0","0","0","0","0"
"0x85","0x0e","ITLB_MISSES.WALK_COMPLETED","Misses in all ITLB levels that cause completed page walks","0,1,2,3","100003","0","0","0","0","0","0"
"0x85","0x60","ITLB_MISSES.STLB_HIT","Operations that miss the first ITLB level but hit the second and do not cause any page walks","0,1,2,3","100003","0","0","0","0","0","0"
"0xB1","0x01","UOPS_EXECUTED.CYCLES_GE_1_UOPS_EXEC","Cycles where at least 1 uop was executed per-thread","0,1,2,3","2000003","0","0","0","0","0","0"
"0xB1","0x01","UOPS_EXECUTED.CYCLES_GE_2_UOPS_EXEC","Cycles where at least 2 uops were executed per-thread","0,1,2,3","2000003","0","0","0","0","0","0"
"0xB1","0x01","UOPS_EXECUTED.CYCLES_GE_3_UOPS_EXEC","Cycles where at least 3 uops were executed per-thread","0,1,2,3","2000003","0","0","0","0","0","0"
"0xB1","0x01","UOPS_EXECUTED.CYCLES_GE_4_UOPS_EXEC","Cycles where at least 4 uops were executed per-thread","0,1,2,3","2000003","0","0","0","0","0","0"
"0xe6","0x1f","BACLEARS.ANY","Counts the total number when the front end is resteered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end.","0,1,2,3","100003","0","0","0","0","0","0"
"0xB7, 0xBB","0x01","OFFCORE_RESPONSE","tbd","0,1,2,3","100003","0","0","0","0","0","0"
"0xC3","0x01","MACHINE_CLEARS.COUNT","Number of machine clears (nukes) of any type. ","0,1,2,3","100003","0","0","0","0","0","1"
