.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.40.10.
.TH TOPLEV.PY "1" "August 2013" "toplev.py  " "User Commands"
.SH NAME
toplev.py \- manual page for toplev.py  
.SH DESCRIPTION
usage: toplev [options] perf\-arguments
.PP
Do cycle decomposition on a workload: estimate on which part of the
CPU pipeline it bottlenecks. The bottlenecks are expressed as a tree
with different levels (max 4).
.PP
Requires an Intel Sandy, Ivy Bridge, Haswell CPU.
It works best on Ivy Bridge currently.
.SH EXAMPLES

\&./toplev.py \fB\-l2\fR program
measure program in level 2
.PP
\&./toplev.py \fB\-a\fR sleep X
measure whole system for X seconds
.PP
\&./toplev.py \fB\-o\fR logfile.csv \fB\-x\fR, \fB\-p\fR PID
measure pid PID, outputting in CSV format
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
show this help message and exit
.TP
\fB\-\-verbose\fR, \fB\-v\fR
Print all results even when below threshold
.TP
\fB\-\-force\fR
Force potentially broken configurations
.TP
\fB\-\-kernel\fR
Only measure kernel code
.TP
\fB\-\-user\fR
Only measure user code
.TP
\fB\-\-print\-group\fR, \fB\-g\fR
Print event group assignments
.TP
\fB\-\-csv\fR CSV, \fB\-x\fR CSV
Enable CSV mode with specified delimeter
.TP
\fB\-\-interval\fR INTERVAL, \fB\-I\fR INTERVAL
Enable interval mode with ms interval
.TP
\fB\-\-output\fR OUTPUT, \fB\-o\fR OUTPUT
Set output file
.TP
\fB\-\-level\fR LEVEL, \fB\-l\fR LEVEL
Measure upto level N (max 5)
.PP
Other perf arguments allowed (see the perf documentation)
After \fB\-\-\fR perf arguments conflicting with toplevel can be used.
.PP
Some caveats:
.PP
The lower levels of the measurement tree are less reliable
than the higher levels.  They also rely on counter multi\-plexing,
and can not run each equation in a single group, which can cause larger
measurement errors with non steady state workloads.
.PP
(If you don't understand this terminology; it means measurements
are much less accurate and it works best with programs that primarily
do the same thing over and over)
.PP
In this case it's recommended to measure the program only after
the startup phase by profiling globally or attaching later.
level 1 or running without \fB\-d\fR is generally the most reliable.
.PP
One of the events (even used by level 1) requires a recent enough
kernel that understands its counter constraints.  3.10+ is safe.
